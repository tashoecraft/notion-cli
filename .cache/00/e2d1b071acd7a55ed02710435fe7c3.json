{"id":"utilities/output.ts","dependencies":[{"name":"/Users/austin/Development/notion-cli/tsconfig.json","includedInParent":true,"mtime":1579653066171},{"name":"/Users/austin/Development/notion-cli/package.json","includedInParent":true,"mtime":1579651723697}],"generated":{"js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CLIOutputn =\n/*#__PURE__*/\nfunction () {\n  function CLIOutputn() {\n    _classCallCheck(this, CLIOutputn);\n  }\n\n  _createClass(CLIOutputn, [{\n    key: \"writeToStnOut\",\n    value: function writeToStnOut(str) {}\n  }, {\n    key: \"error\",\n    value: function error(str) {}\n  }, {\n    key: \"log\",\n    value: function log(str) {}\n  }]);\n\n  return CLIOutputn;\n}();"},"sourceMaps":{"js":{"mappings":[{"source":"utilities/output.ts","name":null,"original":{"line":1,"column":6},"generated":{"line":7,"column":4}},{"source":"utilities/output.ts","name":null,"original":{"line":2,"column":16},"generated":{"line":16,"column":34}},{"source":"utilities/output.ts","name":null,"original":{"line":2,"column":27},"generated":{"line":16,"column":39}},{"source":"utilities/output.ts","name":null,"original":{"line":2,"column":37},"generated":{"line":16,"column":40}},{"source":"utilities/output.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":19,"column":26}},{"source":"utilities/output.ts","name":null,"original":{"line":4,"column":19},"generated":{"line":19,"column":31}},{"source":"utilities/output.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":19,"column":32}},{"source":"utilities/output.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":22,"column":24}},{"source":"utilities/output.ts","name":null,"original":{"line":6,"column":17},"generated":{"line":22,"column":29}},{"source":"utilities/output.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":22,"column":30}}],"sources":{"utilities/output.ts":"class CLIOutputn {\n  writeToStnOut(str: string): void {}\n\n  error(str: string): void {}\n\n  log(str: string): void {}\n}\n"},"lineCount":null}},"error":null,"hash":"0543545b005cb31f517c1eb2c2d21d51","cacheData":{"env":{}}}